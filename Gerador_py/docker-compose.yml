version: '3.8'
services:
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - certificado_network

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - certificado_network

  api:
    build: 
      context: .
      dockerfile: ./API/Dockerfile
    container_name: certificado_api
    ports:
      - "5000:5000"
    depends_on:
      - mysql
      - redis
    environment:
      - FLASK_ENV=development
    networks:
      - certificado_network
    volumes:
      - ./SaveCertificado:/app/API/SaveCertificado

  worker:
    build: 
      context: .
      dockerfile: ./Worker/Dockerfile
    container_name: certificado_worker
    depends_on:
      - rabbitmq
      - mysql
    environment:
      - FLASK_ENV=development
      - WAIT_HOSTS=rabbitmq:5672
    networks:
      - certificado_network
    volumes:
      - ./SaveCertificado:/app/SaveCertificado
    entrypoint: ["./wait-for-it.sh", "rabbitmq:5672", "--", "python", "Worker/app.py"]

  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: senha
      MYSQL_DATABASE: certificados_db
    ports:
      - "3306:3306"
    volumes:
      - ./Database/ddl.sql:/docker-entrypoint-initdb.d/ddl.sql
    networks:
      - certificado_network

networks:
  certificado_network:
    driver: bridge
